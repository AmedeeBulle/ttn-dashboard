#######################################
#
# docker-compose.yml
#
# Main compose file
#
# Copyright (c) 2019 Philippe Vanhaesendonck
#
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.
#
# SPDX-License-Identifier: UPL-1.0
#
# Define the following services:
# - Reverse proxy
#   - nginx: the NGINX proxy itself
#   - proxy-gen: generates the NGINX configuration dynamically
# - Dashboard
#   - node-red: Node-RED application with the TTN and InfluxDB nodes
#   - influxdb: InfluxDB timeseries database
#   - grafana: Grafana dashboard
#
# If you expose the Grafana/Node-RED services to the outside world, use the
# docker-compose-https.yml file in addition to this one to enable https and
# generate Let's Encrypt certificates.
#
#######################################

version: '3.5'
services:
  proxy-nginx:
    image: nginx
    container_name: ${PROXY_NGINX:-proxy-nginx}
    restart: unless-stopped
    userns_mode: "host"
    ports:
      - "${LISTEN_IP:-0.0.0.0}:${LISTEN_HTTP:-80}:80"
    volumes:
      - proxy_conf:/etc/nginx/conf.d
      - proxy_vhosts:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - proxy_certs:/etc/nginx/certs:ro
      - proxy_passwd:/etc/nginx/htpasswd:ro

  proxy-gen:
    image: jwilder/docker-gen
    command: -notify-sighup ${PROXY_NGINX:-proxy-nginx} -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${PROXY_GEN:-proxy-gen}
    restart: unless-stopped
    userns_mode: "host"
    depends_on:
      - proxy-nginx
    volumes:
      - proxy_conf:/etc/nginx/conf.d
      - proxy_vhosts:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - proxy_certs:/etc/nginx/certs:ro
      - proxy_passwd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  node-red:
    build: node-red
    image: node-red-ttn
    restart: unless-stopped
    depends_on:
      - proxy-nginx
      - influxdb
    volumes:
      - ttn_node_red:/data
    environment:
      VIRTUAL_PORT: 1880
      VIRTUAL_HOST: ${TTN_NODE_RED_HOST:?Hostname for Node-RED is mandatory}
      LETSENCRYPT_HOST: ${TTN_NODE_RED_HOST:?Hostname for Node-RED is mandatory}

  influxdb:
    image: influxdb:1.7.9
    restart: unless-stopped
    volumes:
      - ttn_influxdb:/var/lib/influxdb
      - ttn_collectd:/etc/collectd
      - ./influxdb/types.db:/usr/share/collectd/types.db:ro
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      # Following are only used at creation time
      INFLUXDB_DB: ${TTN_INFLUX_DB:-ttn}
      INFLUXDB_ADMIN_USER: ${TTN_INFLUX_ADMIN_USER:-ttn-admin}
      INFLUXDB_ADMIN_PASSWORD: ${TTN_INFLUX_ADMIN_PASSWORD:?InfluxDB Admin password is mandatory}
      INFLUXDB_USER: ${TTN_INFLUX_USER:-ttn-user}
      INFLUXDB_USER_PASSWORD: ${TTN_INFLUX_PASSWORD:?InfluxDB user password is mandatory}
      INFLUXDB_READ_USER: ${TTN_INFLUX_READ_USER:-ttn-read}
      INFLUXDB_READ_USER_PASSWORD: ${TTN_INFLUX_READ_PASSWORD:?InfluxDB read-only password is mandatory}
      # Control logging
      INFLUXDB_DATA_QUERY_LOG_ENABLED: "${TTN_INFLUXDB_DATA_QUERY_LOG_ENABLED:-true}"
      INFLUXDB_HTTP_LOG_ENABLED: "${TTN_INFLUXDB_HTTP_LOG_ENABLED:-true}"
      # Optionnal configuration for Collectd
      INFLUXDB_COLLECTD_ENABLED: "${TTN_INFLUXDB_COLLECTD_ENABLED:-false}"
      INFLUXDB_COLLECTD_DATABASE: ${TTN_INFLUX_COLLECT_DB:-ttn}
      INFLUXDB_COLLECTD_SECURITY_LEVEL: ${TTN_INFLUXDB_COLLECTD_SECURITY_LEVEL:-encrypt}
    ports:
      - "${TTN_INFLUXDB_BIND_ADDRESS:-127.0.0.1:25826}:25826/udp"

  grafana:
    image: grafana/grafana:6.5.2
    restart: unless-stopped
    depends_on:
      - proxy-nginx
      - influxdb
    volumes:
      - ttn_grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${TTN_GRAFANA_ADMIN_PASSWORD:?Grafana Admin password is mandatory}
      # Logging
      GF_LOG_MODE: console
      GF_LOG_LEVEL: ${TTN_GRAFANA_LOG_LEVEL:-info}
      # Proxy configuration
      VIRTUAL_PORT: 3000
      VIRTUAL_HOST: ${TTN_GRAFANA_HOST:?Hostname for Grafana is mandatory}
      LETSENCRYPT_HOST: ${TTN_GRAFANA_HOST:?Hostname for Grafana is mandatory}

volumes:
  proxy_conf:
  proxy_vhosts:
  proxy_html:
  proxy_certs:
  proxy_passwd:
  ttn_node_red:
  ttn_influxdb:
  ttn_collectd:
  ttn_grafana:
